
stages:
  - build
  - test
  - deploy


build_job1:
  stage: build
  script:
    - echo "in building phase"
    - date +%s
  only:
    - branches
  except:
    - master

build_job2:
  stage: build
  script:
    - echo "in building phase"
    - date +%s
  only:
    - branches
  except:
    - master

testing:
  stage: test
  script:
    - echo "in the testing phase"
  only:
    - branches
  except:
    - master

  # each job gets run independently from each other


deploy_staging:
  stage: deploy
  #when: manual
  #allow_failure: false
  image: docker:stable
  environment:
    name: staging
  services:
    - docker:stable-dind
  script:
    - echo "wassup"
    - echo "docker info"
    - docker info
    - echo "here we will deploy"
    - docker build -t myapp-image .
    - docker run --name=myapp -d myapp-image
    - echo "running succesfully"
  only:
    - master

#performance:
#  stage: performance
#  image: docker:git
#  variables:
#    URL: https://www.flipkart.com
#  services:
#    - docker:stable-dind
#  script:
#    - mkdir gitlab-exporter
#    - wget -O ./gitlab-exporter/index.js https://gitlab.com/gitlab-org/gl-performance/raw/master/index.js
#    - mkdir sitespeed-results
#    - docker run --shm-size=1g --rm -v "$(pwd)":/sitespeed.io sitespeedio/sitespeed.io:6.3.1 --plugins.add ./gitlab-exporter --outputFolder sitespeed-results $URL
#    - mv sitespeed-results/data/performance.json performance.json
#    - date +%s
#  artifacts:
#    paths:
#      - sitespeed-results/
#    reports:
#      performance: performance.json

#code_quality:
#  image: docker:stable
#  variables:
#    DOCKER_DRIVER: overlay2
#  allow_failure: true
#  services:
#    - docker:stable-dind
#  script:
#    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
#    - docker run
#        --env SOURCE_CODE="$PWD"
#        --volume "$PWD":/code
#        --volume /var/run/docker.sock:/var/run/docker.sock
#        "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
#  artifacts:
#    reports:
#      codequality: gl-code-quality-report.json
